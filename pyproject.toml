[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flask-minimal"
version = "2.0.0"
description = "A modern Flask library management system template"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "djeada", email = "djeada@example.com"}
]
maintainers = [
    {name = "djeada", email = "djeada@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "Flask>=3.0.0",
    "Flask-SQLAlchemy>=3.1.1",
    "Flask-Migrate>=4.0.5",
    "Flask-JWT-Extended>=4.6.0",
    "Flask-CORS>=4.0.0",
    "Flask-Limiter>=3.5.0",
    "marshmallow>=3.20.2",
    "bcrypt>=4.1.2",
    "python-dotenv>=1.0.0",
    "click>=8.1.7",
    "gunicorn>=21.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-flask>=1.3.0",
    "factory-boy>=3.3.0",
    "Faker>=20.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "bandit>=1.7.5",
    "pre-commit>=3.6.0",
]
docs = [
    "Sphinx>=7.2.6",
    "sphinx-rtd-theme>=1.3.0",
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.8",
]
prod = [
    "psycopg2-binary>=2.9.9",
    "redis>=5.0.1",
    "celery>=5.3.4",
    "sentry-sdk[flask]>=1.38.0",
    "structlog>=23.2.0",
]

[project.urls]
"Homepage" = "https://github.com/djeada/Flask-Minimal"
"Bug Reports" = "https://github.com/djeada/Flask-Minimal/issues"
"Source" = "https://github.com/djeada/Flask-Minimal"
"Documentation" = "https://flask-minimal.readthedocs.io/"

[project.scripts]
flask-minimal = "src.app:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-data]
"src" = ["templates/*", "static/*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "migrations/",
    "tests/",
    "venv/",
    "build/",
    "dist/",
]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "setup.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = false
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.coverage.html]
directory = "htmlcov"

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]
